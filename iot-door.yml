apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "10"
  generation: 10
  labels:
    app: iot-door-service
  name: iot-door-service
  namespace: default
  selfLink: /apis/extensions/v1beta1/namespaces/default/deployments/iot-door-service
spec:
  replicas: 3
  selector:
    matchLabels:
      app: iot-door-service
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: iot-door-service
    spec:
      containers:
      - env:
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              key: username
              name: cloudsql-db-credentials
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: cloudsql-db-credentials
        image: gcr.io/iot-door-hanger/data-portal:1.2
        imagePullPolicy: IfNotPresent
        name: data-portal
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /repo
          name: git-repo
      - command:
        - /cloud_sql_proxy
        - -instances=iot-door-hanger:us-central1:iot-door-hanger=tcp:3306
        - -credential_file=/secret/cloudsql/credentials.json
        image: gcr.io/cloudsql-docker/gce-proxy:1.11
        imagePullPolicy: IfNotPresent
        name: gce-proxy
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          runAsUser: 2
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /secret/cloudsql
          name: cloudsql-instance-credentials
          readOnly: true
      dnsPolicy: ClusterFirst
      initContainers:
      - args:
        - clone
        - --single-branch
        - --
        - https://github.com/almiche/IOT-Hotel-Room-Protection.git
        - /repo
        image: alpine/git
        imagePullPolicy: Always
        name: git-clone
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsUser: 1
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /repo
          name: git-repo
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: cloudsql-instance-credentials
        secret:
          defaultMode: 420
          secretName: cloudsql-instance-credentials
      - emptyDir: {}
        name: git-repo